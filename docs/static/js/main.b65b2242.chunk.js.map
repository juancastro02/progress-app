{"version":3,"sources":["components/ProgressBar.js","components/Square.js","App.js","index.js"],"names":["data","Square","active","className","ProgressBar","box","Array","from","length","useState","squares","setSquares","stop","setstop","start","setstart","useEffect","indexOf","clearTimeout","index","setTimeout","loopIt","map","e","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAGIA,E,6DCGWC,EAJA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAO,qBAAKC,UAAWD,EAAS,gBAAkB,aDsErCE,EA1DK,WAClB,IAAMC,EAAMC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,kBAAM,KAC7C,EAA8BC,mBAASJ,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KA6BA,OAXAC,qBAAU,WACR,IAAMJ,IAASE,IAAqC,IAA3BJ,EAAQO,SAAQ,GAErC,OADAC,aAAalB,GACNW,EAAWN,IAGjBO,GAAQE,GAtCF,SAACK,EAAOT,EAASC,GAC/BX,EAAOoB,YAAW,WACfV,EAAQS,IAAS,GAEF,IAAXA,GACFR,EAAW,YAAID,MAEhB,KAgCCW,CAAOX,EAAQO,SAAQ,GAAQP,EAASC,KAEzC,CAACC,EAAME,EAAOT,EAAKK,IAGpB,gCACE,oBAAIP,UAAU,qBAAd,0BAEA,qBAAKA,UAAU,yBAAf,SACGO,EAAQY,KAAI,SAACC,EAAGJ,GAAJ,OACX,cAAC,EAAD,CAAoBjB,OAAQqB,GAAfJ,QAIjB,sBAAKhB,UAAU,mBAAf,UACE,wBAAQqB,QAtCM,WAClBX,GAAQ,GACRE,GAAS,IAoCyBZ,UAAU,SAAxC,mBAGA,wBAAQqB,QApCK,WACjBX,GAAQ,GACRE,GAAS,GACTG,aAAalB,IAiCoBG,UAAU,SAAvC,kBAGA,wBAAQqB,QAjCM,WAClBT,GAAS,GACTF,GAAQ,IA+B0BV,UAAU,SAAxC,0B,MEtDOsB,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,OCDNuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b65b2242.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nlet data;\r\n\r\nconst loopIt = (index, squares, setSquares) => {\r\n data = setTimeout(() => {\r\n    squares[index] = true;\r\n\r\n    if (index !== -1) {\r\n      setSquares([...squares]);\r\n    }\r\n  }, 500);\r\n};\r\n\r\nconst ProgressBar = () => {\r\n  const box = Array.from({ length: 15 }, () => false);\r\n  const [squares, setSquares] = useState(box);\r\n  const [stop, setstop] = useState(false);\r\n  const [start, setstart] = useState(false);\r\n\r\n  const handleStart = () => {\r\n    setstop(false);\r\n    setstart(true);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    setstop(true);\r\n    setstart(false);\r\n    clearTimeout(data)\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setstart(false);\r\n    setstop(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if ((!stop && !start) && squares.indexOf(true) !== -1 ) {\r\n        clearTimeout(data)\r\n        return setSquares(box);\r\n    }\r\n\r\n    if (!stop && start) {\r\n      loopIt(squares.indexOf(false), squares, setSquares);\r\n    }\r\n  }, [stop, start, box, squares]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"title-progress-bar\">Progress Bar</h1>\r\n\r\n      <div className=\"container-progress-bar\">\r\n        {squares.map((e, index) => (\r\n          <Square key={index} active={e} />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"button-container\">\r\n        <button onClick={handleStart} className=\"button\">\r\n          Start\r\n        </button>\r\n        <button onClick={handleStop} className=\"button\">\r\n          Stop\r\n        </button>\r\n        <button onClick={handleReset} className=\"button\">\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\n\r\nconst Square = ({ active }) => {\r\n  return <div className={active ? \"square active\" : \"square \"}></div>;\r\n};\r\n\r\nexport default Square;\r\n","import ProgressBar from \"./components/ProgressBar\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProgressBar />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}